# Generated by Django 5.1.5 on 2025-03-04 20:15

import cart.models
import django.db.models.deletion
import django.utils.timezone
import django_jalali.db.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0009_alter_address_options_user_melicode_and_more'),
        ('product', '0046_remove_product_color_remove_product_size_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiscountCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='کد تخفیف')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='درصد تخفیف')),
                ('quantity', models.SmallIntegerField(default=0, verbose_name='تعداد کد')),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_to', models.DateTimeField(default=cart.models.add_30_days)),
                ('is_used', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'کد تخفیف',
                'verbose_name_plural': 'کد های تخفیف',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_quantities', models.IntegerField(default=0, verbose_name='مجموع تعداد محصولات')),
                ('total_price', models.BigIntegerField(default=0, verbose_name='قیمت کلی محصولات')),
                ('order_date', django_jalali.db.models.jDateField(auto_now_add=True, verbose_name='تاریخ سفارش')),
                ('is_paid', models.BooleanField(default=False, verbose_name='وضعیت پرداخت')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'سفارش',
                'verbose_name_plural': 'سفارش ها',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.JSONField(default=dict, verbose_name='مشخصات کالا')),
                ('quantity', models.IntegerField(verbose_name='تعداد')),
                ('price', models.BigIntegerField(verbose_name='قیمت')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='cart.order', verbose_name='سفارش')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='product.product', verbose_name='محصول')),
            ],
            options={
                'verbose_name': 'کالا های موجود در سفارش',
                'verbose_name_plural': 'کالا های موجود در سفارش ها',
            },
        ),
        migrations.CreateModel(
            name='UserDiscountCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used_at', models.DateTimeField(auto_now_add=True)),
                ('overall_discount', models.BigIntegerField(default=0)),
                ('discount_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cart.discountcode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'discount_code')},
            },
        ),
    ]
